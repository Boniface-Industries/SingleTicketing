@model UserListViewModel
@Html.Partial("_SuperAdminSidebar.cshtml")
@{
    ViewData["Title"] = "User List";
}

<div class="center-wrapper my-5">
    <div class="container">
        <h2 class="text-center mb-4">User Management</h2>

        <!-- Card for User List -->
        <div class="card">
            <div class="card-header">
                <h5>User List</h5>
            </div>
            <div class="card-body">
                <!-- Search Bar 
                 <div class="mb-3">
                     <input type="text" id="searchInput" class="form-control" placeholder="Search by username..." />
                 </div>-->

                <!-- User list table with hover and click functionality -->
                <div class="table-responsive">
                    <table class="table table-hover table-striped" id="userTable">
                        <thead class="table-dark">
                            <tr>
                                <th>Username</th>
                                <th>Role</th>
                                <th>Status</th>
                                
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var user in Model.Users)
                            {
                                <tr data-bs-toggle="modal" data-bs-target="#passwordModal" onclick="setUserForEdit(@user.Id)" style="cursor: pointer;">
                                    <td>@user.Username</td>
                                    <td>@user.RoleName</td>
                                    <td>@user.StatusName</td>
                                     
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                <!-- Pagination -->
                <nav aria-label="User Pagination">
                    <ul class="pagination justify-content-center">
                        <li class="page-item @(Model.CurrentPage == 1 ? "disabled" : "")">
                            <a class="page-link" href="?page=@(Model.CurrentPage - 1)">Previous</a>
                        </li>
                        @for (int i = 1; i <= Model.TotalPages; i++)
                        {
                            <li class="page-item @(Model.CurrentPage == i ? "active" : "")">
                                <a class="page-link" href="?page=@i">@i</a>
                            </li>
                        }
                        <li class="page-item @(Model.CurrentPage == Model.TotalPages ? "disabled" : "")">
                            <a class="page-link" href="?page=@(Model.CurrentPage + 1)">Next</a>
                        </li>
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Password Modal -->
<div class="modal fade" id="passwordModal" tabindex="-1" aria-labelledby="passwordModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="passwordModalLabel">Enter Password to Continue</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <input type="password" id="passwordInput" class="form-control" placeholder="Enter your password..." />
                <input type="hidden" id="userId" /> <!-- Hidden input to store User ID -->
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmEditButton">Confirm</button>
            </div>
        </div>
    </div>
</div>

<script>
    function setUserForEdit(userId) {
        document.getElementById('userId').value = userId; // Store selected userId in the hidden field
    }

    document.getElementById('confirmEditButton').addEventListener('click', async function () {
        const password = document.getElementById('passwordInput').value;
        const userId = document.getElementById('userId').value; // Get the stored selected userId

        const response = await fetch(`/SuperAdmin/ValidatePassword`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json',
                'X-CSRF-TOKEN': '@Html.AntiForgeryToken()' // Include CSRF token
            },
            body: JSON.stringify({ password: password }) // Send only the password, no userId
        });

        if (response.ok) {
            window.location.href = `/SuperAdmin/Edit/${userId}`; // Redirect to Edit page for the selected user
        } else {
            alert('Invalid password. Please try again.');
        }
    });

    // document.getElementById('searchInput').addEventListener('keyup', function () {
    //     const filter = this.value.toLowerCase();
    //     const rows = document.querySelectorAll('#userTable tbody tr');

    //     rows.forEach(row => {
    //         const username = row.querySelector('td:first-child').textContent.toLowerCase();
    //         row.style.display = username.includes(filter) ? '' : 'none';
    //     });
    // });
</script>


