@model IEnumerable<SingleTicketing.Data.User>
@Html.Partial("_SuperAdminSidebar.cshtml")
@{
    ViewData["Title"] = "User List";
}

<div class="center-wrapper my-5">
    <div class="container">
        <h1 class="mb-4">@ViewData["Title"]</h1>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success">
                @TempData["SuccessMessage"]
            </div>
        }

        <div class="d-flex justify-content-between align-items-center mb-3">
            <!-- Link to create a new user -->
            <p>
                <a class="btn btn-primary" asp-action="Create">Create New</a>
            </p>
            <p> <a asp-action="Index" asp-controller="Role" class="btn btn-primary">View Roles</a>   </p>

        </div>

        <!-- User list table with hover and click functionality -->
        <div class="table-responsive">
            <table class="table table-hover table-striped" id="userTable">
                <thead class="table-dark">
                    <tr>
                        <th>Username</th>
                        <th>Password</th>
                        <th>Role</th>
                        <th>Status</th>
                       
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <!-- Make the entire row clickable -->
                        <tr class="clickable-row" data-user-id="@item.Id" data-username="@item.Username" data-role="@item.RoleName">
                            <td>@Html.DisplayFor(modelItem => item.Username)</td>
                            <td>@Html.DisplayFor(modelItem => item.PasswordHash)</td>
                            <td>@Html.DisplayFor(modelItem => item.RoleName)</td>
                            <td>@Html.DisplayFor(modelItem => item.StatusName)</td>
                            
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Details Modal -->
<div class="modal fade" id="detailsModal" tabindex="-1" aria-labelledby="detailsModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="detailsModalLabel">User Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p id="userDetails"></p>
                <!-- Action buttons moved inside the modal -->
                <div class="d-flex justify-content-between">
                    <a id="editLink" class="btn btn-warning" href="#">Edit</a>
                    <a id="deleteLink" class="btn btn-danger" href="#">Delete</a>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Make each row clickable and show the modal on row click
        document.querySelectorAll('.clickable-row').forEach(row => {
            row.addEventListener('click', function () {
                const userId = this.getAttribute('data-user-id');
                const username = this.getAttribute('data-username');
                const role = this.getAttribute('data-role');

                // Populate modal with user details
                document.getElementById('userDetails').innerText = `Username: ${username}\nRole: ${role}`;
                document.getElementById('editLink').setAttribute('href', `/SuperAdmin/Edit/${userId}`);
                document.getElementById('deleteLink').setAttribute('href', `/SuperAdmin/Delete/${userId}`);

                // Show the modal
                var modal = new bootstrap.Modal(document.getElementById('detailsModal'));
                modal.show();
            });
        });
    });
</script>
