// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SingleTicketing.Data;

#nullable disable

namespace SingleTicketing.Migrations
{
    [DbContext(typeof(MyDbContext))]
    [Migration("20240925022347_UPDATE")]
    partial class UPDATE
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SingleTicketing.Data.Admin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Access_Level")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("SingleTicketing.Data.Driver", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Admitted")
                        .HasColumnType("longtext");

                    b.Property<string>("Birthdate")
                        .HasColumnType("longtext");

                    b.Property<string>("Contested")
                        .HasColumnType("longtext");

                    b.Property<int?>("Demerit")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("LicenseRestrictions")
                        .HasColumnType("longtext");

                    b.Property<int?>("PlateNumber")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<string>("TOP")
                        .HasColumnType("longtext");

                    b.Property<string>("TypeOfVehicle")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Drivers");
                });

            modelBuilder.Entity("SingleTicketing.Data.Enforcer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("longtext");

                    b.Property<string>("BirthDate")
                        .HasColumnType("longtext");

                    b.Property<string>("Cases")
                        .HasColumnType("longtext");

                    b.Property<int?>("Contact_No")
                        .HasColumnType("int");

                    b.Property<string>("Department")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("FullName")
                        .HasColumnType("longtext");

                    b.Property<string>("UserName")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Enforcers");
                });

            modelBuilder.Entity("SingleTicketing.Data.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("SingleTicketing.Data.Status", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");
                });

            modelBuilder.Entity("SingleTicketing.Data.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address_of_the_Vehicle_Driver")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Amount_Due")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Apprehending_Officer")
                        .HasColumnType("longtext");

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<string>("Contact_No")
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Date_Issued")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Date_Of_Birth")
                        .HasColumnType("longtext");

                    b.Property<string>("DriverName")
                        .HasColumnType("longtext");

                    b.Property<int?>("Fine_Amount")
                        .HasColumnType("int");

                    b.Property<string>("LicenseNumber")
                        .HasColumnType("longtext");

                    b.Property<string>("MV_File")
                        .HasColumnType("longtext");

                    b.Property<string>("OR_Number")
                        .HasColumnType("longtext");

                    b.Property<string>("Status")
                        .HasColumnType("longtext");

                    b.Property<string>("Type_of_Violation")
                        .HasColumnType("longtext");

                    b.Property<string>("Vehicle_Category")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("SingleTicketing.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .HasColumnType("longtext");

                    b.Property<string>("MiddleName")
                        .HasColumnType("longtext");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Remarks")
                        .HasColumnType("longtext");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("StatusName")
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("Sts_Id")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("RoleName");

                    b.HasIndex("StatusName");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SingleTicketing.Data.Violation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("longtext");

                    b.Property<int?>("Fine_Amount")
                        .HasColumnType("int");

                    b.Property<string>("Violation_Name")
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Violations");
                });

            modelBuilder.Entity("SingleTicketing.Models.Attachment", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int?>("Id"));

                    b.Property<string>("ContentType")
                        .HasColumnType("longtext");

                    b.Property<byte[]>("Data")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("FileData")
                        .HasColumnType("longblob");

                    b.Property<string>("FileName")
                        .HasColumnType("longtext");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Attachments");
                });

            modelBuilder.Entity("SingleTicketing.Data.User", b =>
                {
                    b.HasOne("SingleTicketing.Data.Role", null)
                        .WithMany("Users")
                        .HasForeignKey("RoleId");

                    b.HasOne("SingleTicketing.Data.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleName")
                        .HasPrincipalKey("RoleName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SingleTicketing.Data.Status", "Status")
                        .WithMany()
                        .HasForeignKey("StatusName")
                        .HasPrincipalKey("StatusName");

                    b.Navigation("Role");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("SingleTicketing.Models.Attachment", b =>
                {
                    b.HasOne("SingleTicketing.Data.User", "User")
                        .WithMany("Attachments")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SingleTicketing.Data.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("SingleTicketing.Data.User", b =>
                {
                    b.Navigation("Attachments");
                });
#pragma warning restore 612, 618
        }
    }
}
