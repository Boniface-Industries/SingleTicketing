// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SingleTicketing.Data;

#nullable disable

namespace SingleTicketing.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("SingleTicketing.Data.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PasswordHash = "adminhash1",
                            Role = "Admin",
                            Username = "admin1"
                        },
                        new
                        {
                            Id = 2,
                            PasswordHash = "adminhash2",
                            Role = "Admin",
                            Username = "admin2"
                        },
                        new
                        {
                            Id = 3,
                            PasswordHash = "driverhash1",
                            Role = "Driver",
                            Username = "driver1"
                        },
                        new
                        {
                            Id = 4,
                            PasswordHash = "driverhash2",
                            Role = "Driver",
                            Username = "driver2"
                        },
                        new
                        {
                            Id = 5,
                            PasswordHash = "enforcerhash1",
                            Role = "Enforcer",
                            Username = "enforcer1"
                        },
                        new
                        {
                            Id = 6,
                            PasswordHash = "enforcerhash2",
                            Role = "Enforcer",
                            Username = "enforcer2"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
